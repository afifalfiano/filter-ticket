{"version":3,"file":"static/js/666.08843fa7.chunk.js","mappings":"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","sources":["pages/history_dashboard/HistoryDashboard.jsx","store/features/complain_history/complainHistoryApiSlice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAllComplainHistoryMutation } from '../../store/features/complain_history/complainHistoryApiSlice';\r\nimport { selectAllComplainHistory, setComplainHistory } from '../../store/features/complain_history/complainHistorySlice';\r\nimport { useAllPOPMutation } from '../../store/features/pop/popApiSlice';\r\nimport { setPOP } from '../../store/features/pop/popSlice';\r\nimport { selectCurrentUser } from '../../store/features/auth/authSlice';\r\nimport { selectModalState, setModal } from '../../store/features/modal/modalSlice';\r\nimport { updateBreadcrumb } from '../../store/features/breadcrumb/breadcrumbSlice';\r\nimport catchError from '../../services/catchError';\r\nimport { DoShowRFOTrouble, Search, SelectPOP, Modal, Pagination, SkeletonTable, LabelStatusPOP, DoDetail, DoShowRFOComplain, DoRollbackStatus, ProgressTime } from '../../components/index';\r\nimport loadable from '@loadable/component';\r\n\r\nconst ReopenModal = loadable(() => import('./ReopenModal'));\r\n\r\nfunction HistoryDashboard() {\r\n  const initColumns = [\r\n    'No',\r\n    'POP',\r\n    'Pelanggan',\r\n    'Kontak',\r\n    'Keluhan',\r\n    'Progress',\r\n    'Waktu',\r\n    'Status',\r\n    'Aksi',\r\n  ];\r\n  const [columns, setColumns] = useState(initColumns);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState([5]);\r\n  const [countPage, setCountPage] = useState([1]);\r\n\r\n  const [pop, setPOPLocal] = useState('all');\r\n  const [dataPOP, setdataPOP] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const navigate = useNavigate();\r\n  const [rows, setRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [allComplainHistory, { isLoading }] = useAllComplainHistoryMutation();\r\n  const [detail, setDetail] = useState(null);\r\n  const stateModal = useSelector(selectModalState);\r\n  const openModal = () => {\r\n    const newState = { ...stateModal, history_dashboard: { ...stateModal.history_dashboard, showRevertModalHistoryComplain: true } };\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n\r\n  const getAllComplainHistory = async (page = 1) => {\r\n    const param = `?page=${page}`;\r\n    try {\r\n      const data = await allComplainHistory(param).unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        let dataFix;\r\n        if (user?.role_id === 2) {\r\n          const dataFilter = data.data.data.filter((item) => {\r\n            if (item.pop_id === user.pop_id) {\r\n              return item;\r\n            }\r\n          });\r\n          dataFix = dataFilter\r\n          dispatch(setComplainHistory({ data: dataFix }));\r\n          setRows(dataFix);\r\n        } else {\r\n          dispatch(setComplainHistory({ ...data.data }));\r\n          setRows(data.data.data);\r\n          setCurrentPage(data.data.current_page);\r\n          setPerPage([data.data.per_page]);\r\n\r\n          const countPaginate = [];\r\n          for (let i = 0; i < data.data.last_page; i++) {\r\n            countPaginate.push(i + 1);\r\n          }\r\n          setCountPage(countPaginate);\r\n        }\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  const dataRow = useSelector(selectAllComplainHistory);\r\n\r\n  const [allPOP] = useAllPOPMutation();\r\n\r\n  const getAllPOP = async () => {\r\n    try {\r\n      const data = await allPOP().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        let dataFix;\r\n        if (user?.role_id === 2) {\r\n          const dataFilter = data.data.filter((pop) => {\r\n            if (pop.id_pop === user.pop_id) {\r\n              return pop;\r\n            }\r\n          });\r\n          dataFix = dataFilter\r\n        } else {\r\n          dataFix = data.data\r\n        }\r\n        dispatch(setPOP({ data: dataFix }));\r\n        setdataPOP(dataFix);\r\n      } else {\r\n        catchError(data, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const onHandleSearch = (event) => {\r\n    event.preventDefault();\r\n    setSearch(event.target.value);\r\n\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = rows.filter((item) => item.id_pelanggan.match(regex) || item.nama_pelanggan.match(regex) || item.nama_pelapor.match(regex) || item.nomor_pelapor.match(regex));\r\n      setRows(searchResult);\r\n    } else {\r\n      setRows(dataRow.data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(updateBreadcrumb([{ path: '/history_dashboard', title: 'Riwayat Dasbor' }]))\r\n    getAllPOP()\r\n    getAllComplainHistory();\r\n    if (user?.role_id === 0) {\r\n      setColumns([\r\n        'No',\r\n        'POP',\r\n        'Pelanggan',\r\n        'Kontak',\r\n        'Keluhan',\r\n        'Progress',\r\n        'Waktu',\r\n        'Status',\r\n        'Sentimen',\r\n        'Aksi',\r\n      ]);\r\n    }\r\n  }, []);\r\n\r\n  const handlePOP = (event) => {\r\n    setPOPLocal(event.target.value);\r\n    const dataChanged = dataRow.data.filter((item) => {\r\n      if (+item.pop_id === +event.target.value) {\r\n        return item;\r\n      }\r\n    })\r\n    if (event.target.value === 'all') {\r\n      setRows(dataRow.data);\r\n    } else {\r\n      setRows(dataChanged);\r\n    }\r\n  };\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllComplainHistory();\r\n    }\r\n  };\r\n\r\n  const rollbackStatus = (item) => {\r\n    setDetail(item);\r\n    openModal();\r\n  }\r\n\r\n  const detailData = (item) => {\r\n    navigate(`/history_dashboard/detail/${item.id_keluhan}`);\r\n  }\r\n\r\n  const RFOKeluhan = (item) => {\r\n    navigate(\r\n      `/history_dashboard/rfo_single/${item.id_keluhan}?id_rfo=${item.rfo_keluhan_id}`\r\n    );\r\n  }\r\n\r\n  const RFOMasalDetail = (item) => {\r\n    setDetail(item);\r\n    navigate(\r\n      `/history_dashboard/rfo_masal/${item.rfo_gangguan_id}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal>\r\n        {stateModal?.history_dashboard?.showRevertModalHistoryComplain && <ReopenModal stateModal={stateModal} getInfo={getInfo} detail={detail} />}\r\n      </Modal>\r\n\r\n      {!isLoading && (\r\n        <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <div className=\"form-control w-full md:w-52\">\r\n            <SelectPOP dataPOP={dataPOP} handlePOP={() => handlePOP()} />\r\n          </div>\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data riwayat keluhan...'} />\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && <SkeletonTable countRows={8} countColumns={10} totalFilter={2} />}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <>\r\n          <div className=\"overflow-x-auto mt-8\">\r\n            <table className=\"table table-zebra w-full\">\r\n              <thead>\r\n                <tr>\r\n                  {columns.map((item, index) => (\r\n                    <th key={index} className=\"text-center\">{item}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {rows.map((item, index) => (\r\n                  <tr key={index} className=\"text-center\">\r\n                    <th>{index + 1}</th>\r\n                    <td className=\"text-left\">\r\n                      <LabelStatusPOP status={item?.pop?.pop} />\r\n                    </td>\r\n                    <td className=\"text-left\">{(item?.id_pelanggan)} - {(item?.nama_pelanggan)}</td>\r\n                    <td className=\"text-left\">{item?.nama_pelapor} - {item?.nomor_pelapor}</td>\r\n                    <td className=\"text-left\">\r\n                      <div dangerouslySetInnerHTML={{ __html: item?.keluhan }} />\r\n                    </td>\r\n                    <td >\r\n                      <div dangerouslySetInnerHTML={{ __html: item?.balasan.length > 0 ? item?.balasan[item.balasan.length - 1].balasan.slice(0, 100) : 'Belum ada tindakan' }} className={`${item?.balasan.length === 0 ? 'text-center font-semibold badge bg-red-500 border-0 text-white' : ''}`} />\r\n                    </td>\r\n                    <td className=\"text-left\">\r\n                      <ProgressTime item={item} />\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"badge badge-info text-white\">\r\n                        {item.status}\r\n                      </span>\r\n                    </td>\r\n                    {user?.role_id === 0 && <td>{item?.sentimen_analisis || '-'}</td>}\r\n                    <td>\r\n                      <div className=\"flex flex-row gap-3 justify-center\">\r\n                        <DoRollbackStatus onClick={() => rollbackStatus(item)} />\r\n                        <DoDetail onClick={() => detailData(item)} />\r\n                        {item.rfo_keluhan_id !== null && <DoShowRFOComplain onClick={() => RFOKeluhan(item)} />}\r\n                        {item.rfo_gangguan_id !== null && <DoShowRFOTrouble onClick={() => RFOMasalDetail(item)} />}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {!isLoading && (<Pagination perPage={perPage} currentPage={currentPage} countPage={countPage} onClick={(i) => getAllComplainHistory(i.target.id)} serverMode />)}\r\n        </>\r\n      )}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryDashboard;\r\n","/* eslint-disable max-len */\r\n\r\nimport { apiSlice } from '../../../api/apiSlice';\r\n\r\nexport const complainHistoryApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    allComplainHistory: builder.mutation({\r\n      query: (param) => ({\r\n        url: `/history${param}`,\r\n        method: 'GET',\r\n      }),\r\n    }),\r\n    complainHistoryById: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/history/${id}`,\r\n        method: 'GET',\r\n      }),\r\n    }),\r\n    complainHistoryReopen: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/open/${id}`,\r\n        method: 'PUT',\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useAllComplainHistoryMutation, useComplainHistoryByIdMutation, useComplainHistoryReopenMutation } = complainHistoryApiSlice;\r\n"],"names":["ReopenModal","loadable","useState","columns","setColumns","currentPage","setCurrentPage","perPage","setPerPage","countPage","setCountPage","setPOPLocal","dataPOP","setdataPOP","search","setSearch","navigate","useNavigate","rows","setRows","dispatch","useDispatch","useAllComplainHistoryMutation","allComplainHistory","isLoading","detail","setDetail","stateModal","useSelector","selectModalState","user","selectCurrentUser","data","getAllComplainHistory","page","param","unwrap","status","role_id","dataFilter","filter","item","pop_id","dataFix","setComplainHistory","current_page","per_page","countPaginate","i","last_page","push","catchError","dataRow","selectAllComplainHistory","useAllPOPMutation","allPOP","getAllPOP","pop","id_pop","setPOP","useEffect","updateBreadcrumb","path","title","rollbackStatus","newState","history_dashboard","showRevertModalHistoryComplain","setModal","window","scrollTo","openModal","getInfo","$event","className","handlePOP","event","target","value","dataChanged","onHandleSearch","preventDefault","length","regex","RegExp","searchResult","id_pelanggan","match","nama_pelanggan","nama_pelapor","nomor_pelapor","placeholder","countRows","countColumns","totalFilter","map","index","dangerouslySetInnerHTML","__html","keluhan","balasan","slice","sentimen_analisis","onClick","id_keluhan","detailData","rfo_keluhan_id","RFOKeluhan","rfo_gangguan_id","RFOMasalDetail","id","serverMode","complainHistoryApiSlice","apiSlice","endpoints","builder","mutation","query","url","method","complainHistoryById","complainHistoryReopen","useComplainHistoryReopenMutation","useComplainHistoryByIdMutation"],"sourceRoot":""}