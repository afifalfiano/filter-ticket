{"version":3,"file":"static/js/487.9b0559f0.chunk.js","mappings":"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","sources":["pages/dashboard/detail/DashboardDetail.jsx"],"sourcesContent":["/* eslint-disable no-undef */\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { useAddReplyMutation, useComplainByIdMutation, useLampiranFileBalasanMutation } from '../../../store/features/complain/complainApiSlice';\r\nimport { setComplainById } from '../../../store/features/complain/complainSlice';\r\nimport { selectBreadcrumb, updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { ReplySchema } from '../../../utils/schema_validation_form';\r\nimport { usePostNotificationMutation, useReadAllNotificationComplainMutation, useStoreAllNotificationMutation } from '../../../store/features/notification/notificationApiSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, Progress, FirstComplain, SectionInformation, UploadFile, TextEditor } from '../../../components';\r\n\r\nfunction DashboardDetail({ rfoSingle, idComplain }) {\r\n  const location = useLocation();\r\n  const [detailComplain, setDetailComplain] = useState(null);\r\n  const [resetTextEditor, setResetTextEditor] = useState(false);\r\n  const [filesLocal, setFilesLocal] = useState([]);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [complainById] = useComplainByIdMutation();\r\n  const [addReply] = useAddReplyMutation();\r\n\r\n  const dispatch = useDispatch();\r\n  const [lampiranFileBalasan] = useLampiranFileBalasanMutation();\r\n  const [storeAllNotification] = useStoreAllNotificationMutation();\r\n  let [countRequest, setCountRequest] = useState(0);\r\n\r\n  const navigasi = useSelector(selectBreadcrumb);\r\n  const onHandleFileUpload = ($event) => {\r\n    setFilesLocal($event);\r\n  }\r\n\r\n  const getComplainById = async () => {\r\n    try {\r\n      let idConditional;\r\n      if (idComplain !== undefined) {\r\n        idConditional = idComplain;\r\n      } else {\r\n        idConditional = id;\r\n      }\r\n      const data = await complainById(idConditional).unwrap();\r\n      dispatch(setComplainById({ ...data }));\r\n      setDetailComplain(data.data);\r\n      if (countRequest === 0) {\r\n        if (window.location.href.includes('/dashboard/detail/')) {\r\n          doReadAllNotification(data.data);\r\n        }\r\n      }\r\n      setCountRequest(countRequest++);\r\n    } catch (error) {\r\n      catchError(error, true)\r\n    }\r\n  };\r\n\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const historyUrl = location.pathname.includes('history');\r\n  const [postNotification] = usePostNotificationMutation();\r\n\r\n  const [readAllNotificationComplain] = useReadAllNotificationComplainMutation()\r\n\r\n  const doReadAllNotification = async (data) => {\r\n    const body = {\r\n      keluhan_id: data.id_keluhan\r\n    };\r\n    try {\r\n      await readAllNotificationComplain({ body }).unwrap();\r\n      // getAllNotification();\r\n    } catch (error) {\r\n      catchError(error, false);\r\n      throw new Error(\"Unsuccess read all notification\");\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getComplainById();\r\n    if (idComplain === undefined) {\r\n      const data = [...navigasi.data, { path: `/dashboard/detail/${id}`, title: 'Detail Dasbor' }]\r\n      dispatch(updateBreadcrumb(data))\r\n\r\n      setTimeout(() => {\r\n        window.scrollTo(0, document.body.scrollHeight);\r\n      }, 500);\r\n\r\n      const intervalId = setInterval(() => {\r\n        getComplainById();\r\n      }, 30000);\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n  }, [])\r\n\r\n  const doPostNotification = async (keluhan_id) => {\r\n    try {\r\n      const body = {\r\n        keluhan_id,\r\n        pop_id: user.pop_id,\r\n        id_response: 1\r\n      }\r\n      const data = await postNotification({ body }).unwrap();\r\n      return data;\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  }\r\n\r\n  const doStoreAllNotiification = async (notifikasi_id) => {\r\n    try {\r\n      const body = {\r\n        notifikasi_id,\r\n      }\r\n      const data = await storeAllNotification({ body }).unwrap();\r\n      return data;\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  }\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    try {\r\n      const body = {\r\n        balasan: payload.balasan,\r\n        user_id: user.id_user,\r\n        keluhan_id: detailComplain.id_keluhan\r\n      }\r\n      const add = await addReply({ ...body });\r\n      if (add.data.status === 'success' || add.data.status === 'Success') {\r\n        resetForm()\r\n        setResetTextEditor(true);\r\n        handleResponse(add);\r\n        if (filesLocal.length > 0) {\r\n          const formData = new FormData();\r\n          formData.append('balasan_id', add?.data?.id_balasan);\r\n          for (let index = 0; index < filesLocal.length; index++) {\r\n            formData.append(`path[${index}]`, filesLocal[index])\r\n          }\r\n\r\n          await lampiranFileBalasan({ body: formData }).unwrap();\r\n        }\r\n        const dataNotification = await doPostNotification(detailComplain.id_keluhan);\r\n        if (dataNotification?.status === 'Success' || dataNotification?.status === 'success') {\r\n          const dataPost = await doStoreAllNotiification(dataNotification?.notifikasi?.id_notifikasi);\r\n          if (dataPost?.status === 'Success' || dataPost?.status === 'success') {\r\n            getComplainById();\r\n            setResetTextEditor(false);\r\n          } else {\r\n            catchError(dataPost, true);\r\n            setResetTextEditor(false);\r\n          }\r\n        } else {\r\n          setResetTextEditor(false);\r\n          catchError(dataNotification, true);\r\n        }\r\n      } else {\r\n        catchError(add, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!rfoSingle && <SectionInformation detailComplain={detailComplain} />}\r\n\r\n      <div className=\"flex w-full flex-col py-5\">\r\n        <FirstComplain detailComplain={detailComplain} />\r\n        <hr />\r\n\r\n        {\r\n          detailComplain?.balasan.length > 0 && detailComplain?.balasan.map((item, index) => (\r\n            <Progress item={item} key={index} />\r\n          ))\r\n        }\r\n\r\n        {!historyUrl && !rfoSingle && detailComplain?.status === 'open'\r\n          ? (\r\n            <Formik\r\n              enableReinitialize\r\n              validationSchema={ReplySchema}\r\n              initialValues={{ balasan: '' }}\r\n              onSubmit={(values, { resetForm }) => {\r\n                onSubmitData(values, resetForm);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                isValid,\r\n                setFieldValue\r\n              }) => (\r\n                <Form id='answer'>\r\n                  <div className=\"form-control\">\r\n                    <label htmlFor=\"balasan\" className=\"label\">\r\n                      <span className=\"label-text\"> Balasan</span>\r\n                    </label>\r\n                    <TextEditor\r\n                      setFieldValue={(val) => setFieldValue('balasan', val)}\r\n                      value={values.balasan}\r\n                      resetData={resetTextEditor}\r\n                    />\r\n                    {errors.balasan && touched.balasan ? (\r\n                      <div className=\"label label-text text-red-500\">{errors.balasan}</div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <UploadFile getFile={onHandleFileUpload} />\r\n                  <div className=\"text-center items-center justify-center mt-10\">\r\n                    <Button className={`mr-5`} onClick={() => navigate('/dashboard')}>Kembali</Button>\r\n                    <Button type={\"submit\"} disabled={!isValid} className={`btn-success`}>Simpan</Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          ) : !rfoSingle && (\r\n            <div className=\"text-center items-center justify-center mt-10\">\r\n              <Button className={`mr-5`} onClick={() => historyUrl ? navigate('/history_dashboard') : navigate('/dashboard')}>Kembali</Button>\r\n            </div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardDetail;\r\n"],"names":["rfoSingle","idComplain","location","useLocation","useState","detailComplain","setDetailComplain","resetTextEditor","setResetTextEditor","filesLocal","setFilesLocal","id","useParams","navigate","useNavigate","useComplainByIdMutation","complainById","useAddReplyMutation","addReply","dispatch","useDispatch","useLampiranFileBalasanMutation","lampiranFileBalasan","useStoreAllNotificationMutation","storeAllNotification","countRequest","setCountRequest","navigasi","useSelector","selectBreadcrumb","onHandleFileUpload","$event","getComplainById","idConditional","undefined","unwrap","data","setComplainById","window","href","includes","doReadAllNotification","catchError","user","selectCurrentUser","historyUrl","pathname","usePostNotificationMutation","postNotification","useReadAllNotificationComplainMutation","readAllNotificationComplain","body","keluhan_id","id_keluhan","Error","useEffect","path","title","updateBreadcrumb","setTimeout","scrollTo","document","scrollHeight","intervalId","setInterval","clearInterval","doPostNotification","pop_id","id_response","doStoreAllNotiification","notifikasi_id","onSubmitData","payload","resetForm","balasan","user_id","id_user","add","status","handleResponse","length","formData","FormData","append","id_balasan","index","dataNotification","notifikasi","id_notifikasi","dataPost","className","map","item","onClick","enableReinitialize","validationSchema","ReplySchema","initialValues","onSubmit","values","errors","touched","isValid","setFieldValue","htmlFor","val","value","resetData","getFile","type","disabled"],"sourceRoot":""}