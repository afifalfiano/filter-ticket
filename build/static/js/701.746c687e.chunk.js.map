{"version":3,"file":"static/js/701.746c687e.chunk.js","mappings":"8VAqJA,MA3IA,YAA0E,IAA7CA,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YACxD,GAA2BC,EAAAA,EAAAA,MAApBC,GAAP,eACA,GAA8BC,EAAAA,EAAAA,MAAvBC,GAAP,eACcC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAA3BC,KACFC,EAAgB,CACpBC,QAAc,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQW,SAAU,IAGtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,WACjB,IAAMC,GAAQ,kBACTjB,GADS,IAEZkB,iBAAgB,kBAAMlB,EAAWkB,iBAAlB,IAAmCC,4BAA4B,EAAOC,+BAA+B,MAEtHN,GAASO,EAAAA,EAAAA,IAASJ,GACnB,EAEKK,EAAY,yCAAG,WAAOC,EAASC,GAAhB,4EACbC,EAAO,CACXC,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,IAC3ChB,OAAQU,EAAQV,OAChBiB,QAAStB,EAAKuB,SAEhB,IAEiB,OAAX7B,EACF8B,EAASP,EAAMD,GAGfS,EAASR,EAIZ,CAFC,MAAOS,IACPC,EAAAA,EAAAA,GAAWD,GAAO,EACnB,CAhBkB,2CAAH,wDAmBZF,EAAQ,yCAAG,WAAOP,EAAMD,GAAb,4FACGnB,GAAiB,UAAKoB,IADzB,OAES,aADlBW,EADS,QAEPzB,KAAK0B,QAA4C,YAApBD,EAAIzB,KAAK0B,SAC5CC,EAAAA,EAAAA,GAAeF,GACfG,YAAW,WACTf,IACAR,IACAf,EAAQ,CAAEoC,OAAQ,WACnB,GAAE,OAEHF,EAAAA,EAAAA,GAAWC,GAAK,GAVH,2CAAH,wDAcRH,EAAQ,yCAAG,WAAOR,GAAP,4FACMlB,EAAoB,CACvCiC,GAAItC,EAAOwB,UACXD,MAAK,kBAAMA,GAAP,IAAaC,UAAWxB,EAAOwB,cAHtB,OAKY,aAJrBe,EADS,QAKJ9B,KAAK0B,QAA+C,YAAvBI,EAAO9B,KAAK0B,SAClDC,EAAAA,EAAAA,GAAeG,GACfF,YAAW,WACTtC,EAAQ,CAAEoC,OAAQ,YAClBrB,GACD,GAAE,OAEHmB,EAAAA,EAAAA,GAAWM,GAAQ,GAZN,2CAAH,sDAgBRC,EAAgB,SAACC,GACrBA,IACA3B,GACD,EAED,OACE,gBAAK4B,UAAU,2GAAf,UACE,iBAAKA,UAAU,4CAAf,WACE,SAAC,KAAD,CAAgBC,QAAS7B,KAEzB,gBAAI4B,UAAU,oBAAd,UACc,OAAX1C,GAAmC,WAAhBC,EAA2B,gBAAkC,WAAhBA,GAA4B,cAC5E,SAAhBA,GAA0B,oBAE7B,eAAIyC,UAAU,UACd,SAAC,KAAD,CACEE,oBAAkB,EAClBlC,cAAeA,EACfmC,iBAAkBC,EAAAA,GAClBC,SAAU,SAACC,EAAD,GAA4B,IAAjB1B,EAAgB,EAAhBA,UACnBF,EAAa4B,EAAQ1B,EACtB,EANH,SAQG,gBACC0B,EADD,EACCA,OACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,QACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACA/B,EAPD,EAOCA,UAPD,OASC,UAAC,KAAD,YACE,iBAAKoB,UAAU,eAAf,WACE,kBAAOY,QAAQ,SAASZ,UAAU,QAAlC,UACE,iBAAMA,UAAU,aAAhB,8BAEF,SAAC,KAAD,CACEJ,GAAG,SACHiB,KAAK,SACLC,YAAY,cACZC,MAAOT,EAAOrC,OACd+C,SAA0B,SAAhBzD,EACV0D,OAAQP,EACRQ,SAAUP,EACVX,UAAU,8CAEXO,EAAOtC,QAAUuC,EAAQvC,SAAU,SAAC,KAAD,CAAUsC,OAAQA,EAAOtC,aAG/D,eAAI+B,UAAU,eACG,SAAhBzC,IACC,iBAAKyC,UAAU,8BAAf,WACE,SAAC,KAAD,CAAQmB,KAAK,SAASlB,QAAS,kBAAMH,EAAclB,EAApB,EAA/B,oBACA,SAAC,KAAD,CAAQuC,KAAK,SAASnB,UAAU,cAAcgB,UAAWP,EAAzD,uBAIa,SAAhBlD,IACC,gBAAKyC,UAAU,8BAAf,UACE,SAAC,KAAD,CAAQmB,KAAK,SAASlB,QAAS,kBAAMH,EAAclB,EAApB,EAA/B,yBArCP,QA+CV,ECzIKwC,EAAU,CAAC,KAAM,OAAQ,QAmM/B,MAjMA,WAA2B,IAAD,MAClBlD,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBkD,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0CC,EAAAA,EAAAA,MAA1C,eAAOC,EAAP,KAA2BC,EAA3B,KAA2BA,UAC3B,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAO/D,EAAP,KAAeqE,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA0BR,EAAAA,EAAAA,UAAS,UAAnC,eAAOS,EAAP,KAAcC,EAAd,KACMC,GAAUnE,EAAAA,EAAAA,IAAYoE,EAAAA,IACtB7E,GAAaS,EAAAA,EAAAA,IAAYqE,EAAAA,IACzBC,EAAY,SAACC,GACjB,IAAI/D,EACU,eAAV+D,EACF/D,GAAQ,kBAAQjB,GAAR,IAAoBkB,iBAAgB,kBAAMlB,EAAWkB,iBAAlB,IAAmCC,4BAA4B,MACvF,kBAAV6D,EACT/D,GAAQ,kBAAQjB,GAAR,IAAoBkB,iBAAgB,kBAAMlB,EAAWkB,iBAAlB,IAAmCE,+BAA+B,MAC1F,kBAAV4D,IACT/D,GAAQ,kBAAQjB,GAAR,IAAoBkB,iBAAgB,kBAAMlB,EAAWkB,iBAAlB,IAAmC+D,+BAA+B,OAE/GnE,GAASO,EAAAA,EAAAA,IAASJ,IAClBiE,OAAOC,SAAS,EAAG,EACpB,EAED,GAAoClB,EAAAA,EAAAA,UAAS,CAC3CmB,YAAa,EACbC,kBAAmB,GACnBC,YAAa,CAAC,GACdC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,OAJ9B,eAAOC,EAAP,KAAmBC,EAAnB,KAOMC,EAAmB,WAA2B,IAA1BC,EAAyB,uDAAZ,EAAGhF,EAAS,uCACjD8E,GAAc,kBAAKD,GAAN,IAAkBJ,YAAaO,EAAYN,kBAAmBG,EAAWH,qBACtF,IAEIO,EAFEC,EAAkBF,EAAaH,EAAWH,kBAC1CS,EAAmBD,EAAkBL,EAAWH,kBAGpDO,OADWG,IAATpF,EACU,OAAGiE,QAAH,IAAGA,OAAH,EAAGA,EAASjE,KAAKqF,MAAMF,EAAkBD,GAEtClF,EAAKqF,MAAMF,EAAkBD,GAE9C1B,EAAQyB,EACT,EAEKK,EAAkB,SAACC,GAEvB,IADA,IAAMZ,EAAc,GACXa,EAAI,EAAGA,GAAKxE,KAAKyE,KAAKF,EAAQG,OAASb,EAAWH,mBAAoBc,IAC7Eb,EAAYgB,KAAKH,GAEnBV,GAAc,kBAAKD,GAAN,IAAkBF,YAAAA,IAChC,EAcKiB,EAAmB,yCAAG,kHAELlC,IAAmBmC,SAFd,OAGJ,aADd7F,EAFkB,QAGf0B,QAAwC,YAAhB1B,EAAK0B,QACpCvB,GAAS2F,EAAAA,EAAAA,KAAiB,UAAK9F,KAC/BwD,EAAQxD,EAAKA,MACb+E,EAAiB,EAAG/E,EAAKA,MACzBsF,EAAgBtF,EAAKA,QAErBwD,EAAQ,KACRhC,EAAAA,EAAAA,GAAWxB,GAAM,IAVK,gDAaxBwD,EAAQ,KACRhC,EAAAA,EAAAA,GAAW,EAAD,IAAM,GAdQ,yDAAH,qDAyCnBlC,EAAU,SAACyG,GACO,YAAlBA,EAAOrE,QACTkE,GAEH,EA4BD,OA1BAI,EAAAA,EAAAA,YAAU,WACR7F,GACE8F,EAAAA,EAAAA,IAAiB,CACf,CAAEC,KAAM,mBAAoBnC,MAAO,gCAGvC6B,GACD,GAAE,KAoBD,4BACE,0BACE,SAAC,KAAD,CAAQxC,KAAK,SAASlB,QAAS,kBAnBnC0B,EAAU,MACVI,EAAS,eACTI,EAAU,aAiByB,EAA/B,uBAGAT,IACA,gBAAK1B,UAAU,+CAAf,UACE,SAAC,KAAD,CAAQ4B,OAAQA,EAAQsC,eA/DT,SAACC,GAEtB,GADAtC,EAAUsC,EAAMC,OAAOrD,OACnBoD,EAAMC,OAAOrD,MAAM0C,OAAS,EAAG,CACjC,IAAMY,EAAQ,IAAIC,OAAO1C,EAAQ,MAC3B2C,EAAevC,EAAQjE,KAAKyG,QAAO,SAACC,GAAD,OAAUA,EAAKxG,OAAOyG,MAAML,EAA5B,IACzC9C,EAAQgD,GACR1B,EAAc,CACZL,YAAa,EACbC,kBAAmB,IACnBC,YAAa,CAAC,GACdC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,MAE/B,MACCpB,EAAQS,EAAQjE,MAChB8E,EAAc,CACZL,YAAa,EACbC,kBAAmB,IACnBC,YAAa,CAAC,GACdC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,MAGjC,EA0C+D7B,YAAa,mCAKzE,UAAC,KAAD,YACa,OAAV1D,QAAU,IAAVA,GAAA,UAAAA,EAAYkB,uBAAZ,eAA6BC,8BAA8B,SAAC,EAAD,CAAmBnB,WAAYA,EAAYC,QAASA,EAASC,OAAQA,EAAQC,YAAauE,KAC3I,OAAV1E,QAAU,IAAVA,GAAA,UAAAA,EAAYkB,uBAAZ,eAA6BE,iCAAiC,SAAC,EAAD,CAAmBpB,WAAYA,EAAYC,QAASA,EAASC,OAAQA,EAAQC,YAAauE,KAC9I,OAAV1E,QAAU,IAAVA,GAAA,UAAAA,EAAYkB,uBAAZ,eAA6B+D,iCAAiC,SAAC,KAAD,CAAajF,WAAYA,EAAYC,QAASA,EAASC,OAAQA,EAAQwE,MAAM,sBAG7IJ,IACC,SAAC,KAAD,CAAeiD,UAAW,EAAGC,aAAc,GAAIC,YAAa,KAI5DnD,IACA,gBAAK1B,UAAU,uBAAf,UACE,mBAAOA,UAAU,2BAAjB,WACE,4BACE,wBACGoB,EAAQ0D,KAAI,SAACL,EAAMM,GAAP,OACX,eAAgB/E,UAAU,cAA1B,SAAyCyE,GAAhCM,EADE,SAKjB,2BACGzD,EAAKwD,KAAI,SAACL,EAAMM,GAAP,OACR,gBAAI/E,UAAU,cAAd,WACE,wBAAK+E,EAAQ,KACb,wBAAKN,EAAKxG,UACV,yBACE,iBAAK+B,UAAU,qCAAf,WACE,SAAC,IAAD,CAAUC,QAAS,kBApDpB,SAACwE,GAClB9C,EAAU8C,GACV1C,EAAS,UACTI,EAAU,gBACX,CAgD4C6C,CAAWP,EAAjB,KACnB,SAAC,KAAD,CAAUxE,QAAS,kBA/CpB,SAACwE,GAClB9C,EAAU8C,GACVtC,EAAU,gBACX,CA4C4C8C,CAAWR,EAAjB,WANQM,EADzB,YAgBhBrD,IAAa,SAAC,KAAD,CAAYwD,YAAY,EAAOzC,kBAAmBG,EAAWH,kBAAmB0C,QAASvC,EAAWD,WAAYH,YAAaI,EAAWJ,YAAa4C,UAAWxC,EAAWF,YAAazC,QAAS,SAACsD,GAAD,OAAOT,EAAiBS,EAAEa,OAAOxE,QAAIuD,EAArC,EAAiDkC,cAAe,SAACC,GAAD,OAxIrP,SAACC,GAC9B,IAAMtC,EAAkBL,EAAWJ,YAAc+C,EAC3CrC,EAAmBD,EAAkBsC,EACrCvC,EAAY,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAASjE,KAAKqF,MAAMF,EAAkBD,GAC3D1B,EAAQyB,GAER,IADA,IAAMN,EAAc,GACXa,EAAI,EAAGA,GAAKxE,KAAKyE,KAAKxB,EAAQjE,KAAK0F,OAAS8B,GAAehC,IAClEb,EAAYgB,KAAKH,GAEnBV,GAAc,kBAAKD,GAAN,IAAkBF,YAAAA,EAAaD,kBAAmB8C,IAChE,CA8H0RC,CAAuBF,EAAElB,OAAOrD,MAAvC,MAIrR,C","sources":["pages/settings/source_complain/FormSumberKeluhan.jsx","pages/settings/source_complain/SourceComplain.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { useAddSumberKeluhanMutation, useUpdateSumberKeluhanMutation } from '../../../store/features/sumber_keluhan/sumberKeluhanApiSlice';\r\nimport { FormSumberKeluhanSchema } from '../../../utils/schema_validation_form';\r\nimport { setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, ButtonIconExit, Required } from '../../../components';\r\n\r\nfunction FormSumberKeluhan({ stateModal, getInfo, detail, titleAction }) {\r\n  const [addSumberKeluhan] = useAddSumberKeluhanMutation();\r\n  const [updateSumberKeluhan] = useUpdateSumberKeluhanMutation();\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const initialValues = {\r\n    sumber: detail?.sumber || '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onBtnClose = () => {\r\n    const newState = {\r\n      ...stateModal,\r\n      source_complain: { ...stateModal.source_complain, showAddModalSourceComplain: false, showUpdateModalSourceComplain: false },\r\n    };\r\n    dispatch(setModal(newState));\r\n  };\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    const body = {\r\n      id_sumber: Math.floor(Math.random() * 90 + 10),\r\n      sumber: payload.sumber,\r\n      user_id: user.id_user,\r\n    };\r\n    try {\r\n      // create\r\n      if (detail === null) {\r\n        doCreate(body, resetForm);\r\n      } else {\r\n        // update\r\n        doUpdate(body);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const doCreate = async (body, resetForm) => {\r\n    const add = await addSumberKeluhan({ ...body });\r\n    if (add.data.status === 'success' || add.data.status === 'Success') {\r\n      handleResponse(add);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        onBtnClose();\r\n        getInfo({ status: 'success' });\r\n      }, 2000);\r\n    } else {\r\n      catchError(add, true);\r\n    }\r\n  }\r\n\r\n  const doUpdate = async (body) => {\r\n    const update = await updateSumberKeluhan({\r\n      id: detail.id_sumber,\r\n      body: { ...body, id_sumber: detail.id_sumber },\r\n    });\r\n    if (update.data.status === 'success' || update.data.status === 'Success') {\r\n      handleResponse(update);\r\n      setTimeout(() => {\r\n        getInfo({ status: 'success' });\r\n        onBtnClose();\r\n      }, 2000);\r\n    } else {\r\n      catchError(update, true);\r\n    }\r\n  }\r\n\r\n  const onHandleReset = (reset) => {\r\n    reset();\r\n    onBtnClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed w-screen h-screen bg-opacity-80 bg-gray-700 top-0 left-0 bottom-0 right-0 z-50 flex justify-center\">\r\n      <div className=\"modal-box mt-5  h-fit max-h-fit  max-w-lg\">\r\n        <ButtonIconExit onClick={onBtnClose} />\r\n\r\n        <h3 className=\"text-lg font-bold\">\r\n          {detail === null && titleAction === 'create' ? 'Tambah Sumber' : titleAction === 'update' && 'Ubah Sumber'}\r\n          {titleAction === 'read' && 'Detail Sumber'}\r\n        </h3>\r\n        <hr className=\"my-2\" />\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={FormSumberKeluhanSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            onSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            isValid,\r\n            handleBlur,\r\n            handleChange,\r\n            resetForm,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"sumber\" className=\"label\">\r\n                  <span className=\"label-text\"> Nama Sumber:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"sumber\"\r\n                  name=\"sumber\"\r\n                  placeholder=\"Nama Sumber\"\r\n                  value={values.sumber}\r\n                  disabled={titleAction === 'read'}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.sumber && touched.sumber && <Required errors={errors.sumber} />}\r\n              </div>\r\n\r\n              <hr className=\"my-2 mt-10\" />\r\n              {titleAction !== 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Batal</Button>\r\n                  <Button type=\"submit\" className=\"btn-success\" disabled={!isValid} >Simpan</Button>\r\n\r\n                </div>\r\n              )}\r\n              {titleAction === 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Kembali</Button>\r\n\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSumberKeluhan;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\nimport { useAllSumberKeluhanMutation } from '../../../store/features/sumber_keluhan/sumberKeluhanApiSlice';\r\nimport { selectAllSumberKeluhan, setSumberKeluhan } from '../../../store/features/sumber_keluhan/sumberKeluhanSlice';\r\nimport FormSumberKeluhan from './FormSumberKeluhan';\r\nimport { selectModalState, setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport { Button, DoDelete, DoUpdate, Search, DeleteModal, SkeletonTable, Pagination, Modal } from '../../../components';\r\n\r\nconst columns = ['No', 'Nama', 'Aksi'];\r\n\r\nfunction SourceComplain() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [allSumberKeluhan, { isLoading }] = useAllSumberKeluhanMutation();\r\n  const [detail, setDetail] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [title, setTitle] = useState('update');\r\n  const dataRow = useSelector(selectAllSumberKeluhan);\r\n  const stateModal = useSelector(selectModalState);\r\n  const openModal = (modal) => {\r\n    let newState;\r\n    if (modal === 'add source') {\r\n      newState = { ...stateModal, source_complain: { ...stateModal.source_complain, showAddModalSourceComplain: true } };\r\n    } else if (modal === 'update source') {\r\n      newState = { ...stateModal, source_complain: { ...stateModal.source_complain, showUpdateModalSourceComplain: true } };\r\n    } else if (modal === 'delete source') {\r\n      newState = { ...stateModal, source_complain: { ...stateModal.source_complain, showDeleteModalSourceComplain: true } };\r\n    }\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    currentFilterPage: 10,\r\n    pageNumbers: [1],\r\n    filterPage: [5, 10, 25, 50, 100]\r\n  });\r\n\r\n  const handlePagination = (targetPage = 1, data) => {\r\n    setPagination({ ...pagination, currentPage: targetPage, currentFilterPage: pagination.currentFilterPage })\r\n    const indexOfLastPost = targetPage * pagination.currentFilterPage;\r\n    const indexOfFirstPost = indexOfLastPost - pagination.currentFilterPage;\r\n    let currentPosts;\r\n    if (data === undefined) {\r\n      currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    } else {\r\n      currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n    setRows(currentPosts);\r\n  }\r\n\r\n  const doGetPageNumber = (dataFix) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataFix.length / pagination.currentFilterPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers });\r\n  }\r\n\r\n  const handleFilterPagination = (selectFilter) => {\r\n    const indexOfLastPost = pagination.currentPage * selectFilter;\r\n    const indexOfFirstPost = indexOfLastPost - selectFilter;\r\n    const currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    setRows(currentPosts);\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataRow.data.length / selectFilter); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers, currentFilterPage: selectFilter });\r\n  }\r\n\r\n  const getAllSumberKeluhan = async () => {\r\n    try {\r\n      const data = await allSumberKeluhan().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setSumberKeluhan({ ...data }));\r\n        setRows(data.data);\r\n        handlePagination(1, data.data);\r\n        doGetPageNumber(data.data);\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  const onHandleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = dataRow.data.filter((item) => item.sumber.match(regex));\r\n      setRows(searchResult);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    } else {\r\n      setRows(dataRow.data);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllSumberKeluhan();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      updateBreadcrumb([\r\n        { path: '/source_complain', title: 'Pengaturan Sumber Keluhan' },\r\n      ])\r\n    );\r\n    getAllSumberKeluhan();\r\n  }, []);\r\n\r\n  const addData = () => {\r\n    setDetail(null);\r\n    setTitle('create');\r\n    openModal('add source');\r\n  }\r\n\r\n  const updateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('update');\r\n    openModal('update source');\r\n  }\r\n\r\n  const deleteData = (item) => {\r\n    setDetail(item);\r\n    openModal('delete source');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button type=\"button\" onClick={() => addData()} >Tambah</Button>\r\n      </div>\r\n\r\n      {!isLoading && (\r\n        <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data sumber keluhan...'} />\r\n\r\n        </div>\r\n      )}\r\n\r\n      <Modal>\r\n        {stateModal?.source_complain?.showAddModalSourceComplain && <FormSumberKeluhan stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.source_complain?.showUpdateModalSourceComplain && <FormSumberKeluhan stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.source_complain?.showDeleteModalSourceComplain && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"Sumber Keluhan\" />}\r\n      </Modal>\r\n\r\n      {isLoading && (\r\n        <SkeletonTable countRows={8} countColumns={10} totalFilter={1} />\r\n      )}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <div className=\"overflow-x-auto mt-8\">\r\n          <table className=\"table table-zebra w-full\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((item, index) => (\r\n                  <th key={index} className=\"text-center\">{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, index) => (\r\n                <tr className=\"text-center\" key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.sumber}</td>\r\n                  <td>\r\n                    <div className=\"flex flex-row gap-3 justify-center\">\r\n                      <DoUpdate onClick={() => updateData(item)} />\r\n                      <DoDelete onClick={() => deleteData(item)} />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {!isLoading && <Pagination serverMode={false} currentFilterPage={pagination.currentFilterPage} perPage={pagination.filterPage} currentPage={pagination.currentPage} countPage={pagination.pageNumbers} onClick={(i) => handlePagination(i.target.id, undefined)} handlePerPage={(x) => handleFilterPagination(x.target.value)} />}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SourceComplain;\r\n"],"names":["stateModal","getInfo","detail","titleAction","useAddSumberKeluhanMutation","addSumberKeluhan","useUpdateSumberKeluhanMutation","updateSumberKeluhan","user","useSelector","selectCurrentUser","data","initialValues","sumber","dispatch","useDispatch","onBtnClose","newState","source_complain","showAddModalSourceComplain","showUpdateModalSourceComplain","setModal","onSubmitData","payload","resetForm","body","id_sumber","Math","floor","random","user_id","id_user","doCreate","doUpdate","error","catchError","add","status","handleResponse","setTimeout","id","update","onHandleReset","reset","className","onClick","enableReinitialize","validationSchema","FormSumberKeluhanSchema","onSubmit","values","errors","touched","isValid","handleBlur","handleChange","htmlFor","name","placeholder","value","disabled","onBlur","onChange","type","columns","useState","rows","setRows","useAllSumberKeluhanMutation","allSumberKeluhan","isLoading","setDetail","search","setSearch","title","setTitle","dataRow","selectAllSumberKeluhan","selectModalState","openModal","modal","showDeleteModalSourceComplain","window","scrollTo","currentPage","currentFilterPage","pageNumbers","filterPage","pagination","setPagination","handlePagination","targetPage","currentPosts","indexOfLastPost","indexOfFirstPost","undefined","slice","doGetPageNumber","dataFix","i","ceil","length","push","getAllSumberKeluhan","unwrap","setSumberKeluhan","$event","useEffect","updateBreadcrumb","path","onHandleSearch","event","target","regex","RegExp","searchResult","filter","item","match","countRows","countColumns","totalFilter","map","index","updateData","deleteData","serverMode","perPage","countPage","handlePerPage","x","selectFilter","handleFilterPagination"],"sourceRoot":""}