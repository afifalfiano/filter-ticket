{"version":3,"file":"static/js/454.de713895.chunk.js","mappings":"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","sources":["pages/settings/users/FormUser.jsx","pages/settings/users/Users.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { FormUserSchema } from '../../../utils/schema_validation_form';\r\nimport { useUpdateUsersMutation } from '../../../store/features/users/usersApiSlice';\r\nimport { useAllPOPMutation } from '../../../store/features/pop/popApiSlice';\r\nimport { useAllTeamMutation } from '../../../store/features/team/teamApiSlice';\r\nimport { selectAllPOP, setPOP } from '../../../store/features/pop/popSlice';\r\nimport { selectAllTeam, setTeam } from '../../../store/features/team/teamSlice';\r\nimport { setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, ButtonIconExit, Required } from '../../../components';\r\n\r\nfunction FormUser({ stateModal, getInfo, detail, titleAction }) {\r\n  const [updateUsers] = useUpdateUsersMutation()\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const initialValues = {\r\n    name: detail?.name || '',\r\n    email: detail?.email || '',\r\n    pop_id: detail?.pop_id || '',\r\n    role_id: detail?.role_id || '',\r\n  };\r\n\r\n  const [, setCurrentRole] = useState(null);\r\n  const [, setCurrentPop] = useState(null);\r\n\r\n  const role = useSelector(selectAllTeam);\r\n  const pop = useSelector(selectAllPOP);\r\n  const dispatch = useDispatch();\r\n  const [allPOP] = useAllPOPMutation();\r\n  const [allTeam] = useAllTeamMutation();\r\n  const onBtnClose = () => {\r\n    const newState = {\r\n      ...stateModal,\r\n      user: { ...stateModal.user, showUpdateModalUser: false, showActivateModalUser: false, showDeactivateModalUser: false },\r\n    };\r\n    dispatch(setModal(newState));\r\n  };\r\n  const getAllPOP = async () => {\r\n    try {\r\n      const data = await allPOP().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setPOP({ ...data }));\r\n        const index = pop?.data?.find((item) => item.id_pop === user.pop_id);\r\n        setCurrentPop(index);\r\n      } else {\r\n        catchError(data, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const getAllTeam = async () => {\r\n    try {\r\n      const data = await allTeam().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setTeam({ ...data }));\r\n        const index = role?.data?.find((item) => +item.id_role === +user?.role_id);\r\n        setCurrentRole(index);\r\n      } else {\r\n        catchError(data, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllPOP();\r\n    getAllTeam();\r\n  }, [])\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    const body = {\r\n      name: payload.name,\r\n      email: payload.email,\r\n      role_id: payload?.role_id,\r\n      pop_id: payload.pop_id,\r\n    };\r\n    try {\r\n      const update = await updateUsers({\r\n        id: detail.id_user,\r\n        body: { ...body, id_user: detail.id_user },\r\n      });\r\n      if (update.data.status === 'success' || update.data.status === 'Success') {\r\n        handleResponse(update);\r\n        setTimeout(() => {\r\n          getInfo({ status: 'success' });\r\n          onBtnClose();\r\n        }, 2000);\r\n      } else {\r\n        catchError(update, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const onHandleReset = (reset) => {\r\n    reset();\r\n    onBtnClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed w-screen h-screen bg-opacity-80 bg-gray-700 top-0 left-0 bottom-0 right-0 z-50 flex justify-center\">\r\n      <div className=\"modal-box h-fit max-h-fit max-w-lg\">\r\n        <ButtonIconExit onClick={onBtnClose} />\r\n        <h3 className=\"text-lg font-bold\">\r\n          {detail === null && titleAction === 'create' ? 'Tambah User' : titleAction === 'update' && 'Ubah User'}\r\n          {titleAction === 'read' && 'Detail User'}\r\n        </h3>\r\n        <hr className=\"my-2\" />\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={FormUserSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            onSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            isValid,\r\n            handleBlur,\r\n            handleChange,\r\n            resetForm,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"name\" className=\"label\">\r\n                  <span className=\"label-text\"> Nama:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={values.name}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.name && touched.name && <Required errors={errors.name} />}\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\" className=\"label\">\r\n                  <span className=\"label-text\"> email:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  component=\"input\"\r\n                  placeholder=\"Email\"\r\n                  value={values.email}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.email && touched.email && <Required errors={errors.email} />}\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"team\" className=\"label\">\r\n                  <span className=\"label-text\"> Tim:</span>\r\n                </label>\r\n\r\n                <Field\r\n                  component=\"select\"\r\n                  id=\"role_id\"\r\n                  name=\"role_id\"\r\n                  value={values?.role_id}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"select w-full max-w-full input-bordered\"\r\n                >\r\n                  {role?.data?.map((item, index) => (\r\n                    <option\r\n                      key={index}\r\n                      id={item.id_role}\r\n                      value={item.id_role}\r\n                      label={item.role}\r\n                    >\r\n                      {item.role}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"location\" className=\"label\">\r\n                  <span className=\"label-text\"> POP (Area Operasional):</span>\r\n                </label>\r\n\r\n                <Field\r\n                  component=\"select\"\r\n                  id=\"pop_id\"\r\n                  name=\"pop_id\"\r\n                  value={values.pop_id}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"select w-full max-w-full input-bordered\"\r\n                >\r\n                  {pop?.data?.map((item, index) => (\r\n                    <option value={item.id_pop} label={item.pop} key={index}>\r\n                      {item.pop}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n\r\n              <hr className=\"my-2 mt-10\" />\r\n              {titleAction !== 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Batal</Button>\r\n                  <Button type=\"submit\" className=\"btn-success\" disabled={!isValid} >Simpan</Button>\r\n\r\n                </div>\r\n              )}\r\n              {titleAction === 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Kembali</Button>\r\n\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormUser;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\nimport { selectAllUsers, setUsers } from '../../../store/features/users/usersSlice';\r\nimport { useAllUsersMutation } from '../../../store/features/users/usersApiSlice';\r\nimport FormUser from './FormUser';\r\nimport { selectModalState, setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport { DoActivate, DoDeactivate, DoUpdate, Search, DeleteModal, Modal, Pagination, SkeletonTable } from '../../../components';\r\n\r\n\r\nconst columns = ['No', 'Nama', 'Email', 'Role Id', 'Pop Id', 'Status', 'Aksi'];\r\nfunction Users() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [allUsers, { isLoading }] = useAllUsersMutation();\r\n  const [detail, setDetail] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [title, setTitle] = useState('update');\r\n  const dataRow = useSelector(selectAllUsers);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState([5]);\r\n  const [countPage, setCountPage] = useState([1]);\r\n\r\n\r\n  const stateModal = useSelector(selectModalState);\r\n\r\n  const openModal = (title) => {\r\n\r\n    let newState;\r\n    if (title === 'update') {\r\n      newState = { ...stateModal, user: { ...stateModal.user, showUpdateModalUser: true } };\r\n    } else if (title === 'aktifkan') {\r\n      newState = { ...stateModal, user: { ...stateModal.user, showActivateModalUser: true } };\r\n    } else if (title === 'nonaktifkan') {\r\n      newState = { ...stateModal, user: { ...stateModal.user, showDeactivateModalUser: true } };\r\n    }\r\n\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  const getAllUsers = async (page = 1) => {\r\n    const param = `?page=${page}`;\r\n    try {\r\n      const data = await allUsers(param).unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        const result = data.data.data;\r\n        dispatch(setUsers({ data: result }));\r\n        setRows(result);\r\n        setCurrentPage(data.data.current_page);\r\n        setPerPage([data.data.per_page]);\r\n        \r\n        const countPaginate = [];\r\n        for (let i = 0; i < data.data.last_page; i++) {\r\n          countPaginate.push(i + 1);\r\n        }\r\n        setCountPage(countPaginate);\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  const onHandleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = dataRow.data.filter((item) => item.name.match(regex) || item.email.match(regex));\r\n      setRows(searchResult);\r\n    } else {\r\n      setRows(dataRow.data);\r\n\r\n    }\r\n  };\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllUsers();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      updateBreadcrumb([\r\n        { path: '/users', title: 'Pengaturan Pengguna' },\r\n      ])\r\n    );\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  const updateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('update');\r\n    openModal('update');\r\n  }\r\n\r\n  const activateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('aktifkan');\r\n    openModal('aktifkan');\r\n  }\r\n\r\n  const deactivateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('nonaktifkan');\r\n    openModal('nonaktifkan');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isLoading && (\r\n      <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data pengguna...'} />\r\n\r\n        </div>\r\n      )}\r\n\r\n      <Modal>\r\n        {stateModal?.user?.showUpdateModalUser && <FormUser stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} /> }\r\n        {stateModal?.user?.showActivateModalUser && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"Aktifkan user\" message='Apakah anda yakin akan mengaktifkan' titleModal=\"\" titleAction=\"Aktifkan\"/> }\r\n        {stateModal?.user?.showDeactivateModalUser && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"Nonaktifkan user\" message='Apakah anda yakin akan menonaktifkan' titleModal=\"\" titleAction=\"Nonaktifkan\" /> }\r\n      </Modal>\r\n      {isLoading && (\r\n        <SkeletonTable countRows={8} countColumns={10} totalFilter={1} />\r\n      )}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <div className=\"overflow-x-auto mt-8\">\r\n          <table className=\"table table-zebra w-full\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((item, index) => (\r\n                  <th className=\"text-center\" key={index}>{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, index) => (\r\n                <tr className=\"text-center\" key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item?.role?.role}</td>\r\n                  <td>{item?.pop?.pop}</td>\r\n                  <td>{item.aktif ? (\r\n                    <span className=\"badge badge-success text-white\">\r\n                      Aktif\r\n                    </span>\r\n                  ): (\r\n                    <span className=\"badge badge-error text-white\">\r\n                      Tidak aktif\r\n                    </span>\r\n                  )}</td>\r\n                  <td>\r\n                    <div className=\"flex flex-row gap-3 justify-center\">\r\n                    <DoUpdate onClick={() => updateData(item)} />\r\n                    {item.aktif && <DoDeactivate onClick={() => deactivateData(item)}  />}\r\n                    {!item.aktif && <DoActivate onClick={() => activateData(item)} />}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {!isLoading && (<Pagination perPage={perPage} currentPage={currentPage} countPage={countPage} onClick={(i) => getAllUsers(i.target.id)} serverMode />)}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"names":["stateModal","getInfo","detail","titleAction","useUpdateUsersMutation","updateUsers","user","useSelector","selectCurrentUser","data","initialValues","name","email","pop_id","role_id","useState","setCurrentRole","setCurrentPop","role","selectAllTeam","pop","selectAllPOP","dispatch","useDispatch","useAllPOPMutation","allPOP","useAllTeamMutation","allTeam","onBtnClose","newState","showUpdateModalUser","showActivateModalUser","showDeactivateModalUser","setModal","getAllPOP","unwrap","status","setPOP","index","find","item","id_pop","catchError","getAllTeam","setTeam","id_role","useEffect","onSubmitData","payload","resetForm","body","id","id_user","update","handleResponse","setTimeout","onHandleReset","reset","className","onClick","enableReinitialize","validationSchema","FormUserSchema","onSubmit","values","errors","touched","isValid","handleBlur","handleChange","htmlFor","placeholder","value","onBlur","onChange","type","component","map","label","disabled","columns","rows","setRows","useAllUsersMutation","allUsers","isLoading","setDetail","search","setSearch","title","setTitle","dataRow","selectAllUsers","currentPage","setCurrentPage","perPage","setPerPage","countPage","setCountPage","selectModalState","openModal","window","scrollTo","getAllUsers","page","param","result","setUsers","current_page","per_page","countPaginate","i","last_page","push","$event","updateBreadcrumb","path","onHandleSearch","event","target","length","regex","RegExp","searchResult","filter","match","message","titleModal","countRows","countColumns","totalFilter","aktif","updateData","deactivateData","activateData","serverMode"],"sourceRoot":""}