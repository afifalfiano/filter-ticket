{"version":3,"file":"static/js/755.d605b696.chunk.js","mappings":"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","sources":["pages/settings/shift/FormShift.jsx","pages/settings/shift/Shift.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { FormShiftSchema } from '../../../utils/schema_validation_form';\r\nimport { useCreateShiftMutation, useUpdateShiftMutation } from '../../../store/features/shift/shiftApiSlice';\r\nimport { setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, ButtonIconExit, Required } from '../../../components';\r\n\r\nfunction FormShift({ stateModal, getInfo, detail, titleAction }) {\r\n  const [createShift] = useCreateShiftMutation();\r\n  const [updateShift] = useUpdateShiftMutation();\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const initialValues = {\r\n    shift: detail?.shift || '',\r\n    mulai: detail?.mulai || '',\r\n    selesai: detail?.selesai || '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onBtnClose = () => {\r\n    const newState = {\r\n      ...stateModal,\r\n      shift: { ...stateModal.shift, showAddModalShift: false, showUpdateModalShift: false },\r\n    };\r\n    dispatch(setModal(newState));\r\n  };\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    const body = {\r\n      shift: +payload.shift,\r\n      mulai: payload.mulai,\r\n      selesai: payload.selesai,\r\n      user_id: user.id_user,\r\n    };\r\n    try {\r\n      // create\r\n      if (detail === null) {\r\n        doCreate(body, resetForm);\r\n      } else {\r\n        // update\r\n        doUpdate(body);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const doUpdate = async (body) => {\r\n    const update = await updateShift({\r\n      id: detail.id_shift,\r\n      body: { ...body, id_shift: detail.id_shift },\r\n    }).unwrap();\r\n    if (update.status === 'success' || update.status === 'Success') {\r\n      handleResponse(update);\r\n      setTimeout(() => {\r\n        getInfo({ status: 'success' });\r\n        onBtnClose();\r\n      }, 2000);\r\n    } else {\r\n      catchError(update, true);\r\n    }\r\n  }\r\n\r\n  const doCreate = async (body, resetForm) => {\r\n    const add = await createShift({ body }).unwrap();\r\n    if (add.status === 'success' || add.status === 'Success') {\r\n      handleResponse(add);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        onBtnClose();\r\n        getInfo({ status: 'success' });\r\n      }, 2000);\r\n    } else {\r\n      catchError(add, true);\r\n    }\r\n  }\r\n\r\n  const onHandleReset = (reset) => {\r\n    reset();\r\n    onBtnClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed w-screen h-screen bg-opacity-80 bg-gray-700 top-0 left-0 bottom-0 right-0 z-50 flex justify-center\">\r\n      <div className=\"modal-box h-fit max-h-fit  max-w-lg\">\r\n        <ButtonIconExit onClick={onBtnClose} />\r\n        <h3 className=\"text-lg font-bold\">\r\n          {detail === null && titleAction === 'create' ? 'Tambah Shift' : titleAction === 'update' && 'Ubah Shift'}\r\n          {titleAction === 'read' && 'Detail Shift'}\r\n        </h3>\r\n        <hr className=\"my-2\" />\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={FormShiftSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            onSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            isValid,\r\n            handleBlur,\r\n            handleChange,\r\n            resetForm,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"shift\" className=\"label\">\r\n                  <span className=\"label-text\"> Shift:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"shift\"\r\n                  name=\"shift\"\r\n                  placeholder=\"Nomor Shift\"\r\n                  value={values.shift}\r\n                  disabled={titleAction === 'read'}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.shift && touched.shift && <Required errors={errors.shift} />}\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"mulai\" className=\"label\">\r\n                  <span className=\"label-text\"> Mulai:</span>\r\n                </label>\r\n                <input type=\"time\" name=\"mulai\" id=\"mulai\" disabled={titleAction === 'read'} value={values.mulai} onChange={handleChange} onBlur={handleBlur} className=\"input input-md input-bordered  max-w-full\" />\r\n                {errors.mulai && touched.mulai && <Required errors={errors.mulai} />}\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"selesai\" className=\"label\">\r\n                  <span className=\"label-text\"> Selesai:</span>\r\n                </label>\r\n                <input type=\"time\" name=\"selesai\" id=\"selesai\" disabled={titleAction === 'read'} value={values.selesai} onChange={handleChange} onBlur={handleBlur} className=\"input input-md input-bordered  max-w-full\" />\r\n                {errors.selesai && touched.selesai && <Required errors={errors.selesai} />}\r\n              </div>\r\n\r\n              <hr className=\"my-2 mt-10\" />\r\n              {titleAction !== 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Batal</Button>\r\n                  <Button type=\"submit\" className=\"btn-success\" disabled={!isValid} >Simpan</Button>\r\n\r\n                </div>\r\n              )}\r\n              {titleAction === 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Batal</Button>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormShift;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\nimport { useIndexShiftMutation } from '../../../store/features/shift/shiftApiSlice';\r\nimport {\r\n  selectAllShift,\r\n  setShift,\r\n} from '../../../store/features/shift/shiftSlice';\r\nimport FormShift from './FormShift';\r\nimport { selectModalState, setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport { Button, DoDelete, DoUpdate, Search, DeleteModal, SkeletonTable, Pagination, Modal } from '../../../components';\r\n\r\nconst columns = ['No', 'Shift', 'Mulai', 'Selesai', 'Aksi'];\r\n\r\nfunction Shift() {\r\n  const dispatch = useDispatch();\r\n  const [rows, setRows] = useState([]);\r\n  const [indexShift, { isLoading }] = useIndexShiftMutation();\r\n  const [detail, setDetail] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [title, setTitle] = useState('update');\r\n  const dataRow = useSelector(selectAllShift);\r\n  const stateModal = useSelector(selectModalState);\r\n  const openModal = (modal) => {\r\n    let newState;\r\n    if (modal === 'add shift') {\r\n      newState = { ...stateModal, shift: { ...stateModal.shift, showAddModalShift: true } };\r\n    } else if (modal === 'update shift') {\r\n      newState = { ...stateModal, shift: { ...stateModal.shift, showUpdateModalShift: true } };\r\n    } else if (modal === 'delete shift') {\r\n      newState = { ...stateModal, shift: { ...stateModal.shift, showDeleteModalShift: true } };\r\n    }\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    currentFilterPage: 10,\r\n    pageNumbers: [1],\r\n    filterPage: [5, 10, 25, 50, 100]\r\n  });\r\n\r\n  const handlePagination = (targetPage = 1, data) => {\r\n    setPagination({ ...pagination, currentPage: targetPage, currentFilterPage: pagination.currentFilterPage })\r\n    const indexOfLastPost = targetPage * pagination.currentFilterPage;\r\n    const indexOfFirstPost = indexOfLastPost - pagination.currentFilterPage;\r\n    let currentPosts;\r\n    if (data === undefined) {\r\n      currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    } else {\r\n      currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n    setRows(currentPosts);\r\n  }\r\n\r\n  const doGetPageNumber = (dataFix) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataFix.length / pagination.currentFilterPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers });\r\n  }\r\n\r\n  const handleFilterPagination = (selectFilter) => {\r\n    const indexOfLastPost = pagination.currentPage * selectFilter;\r\n    const indexOfFirstPost = indexOfLastPost - selectFilter;\r\n    const currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    setRows(currentPosts);\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataRow.data.length / selectFilter); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers, currentFilterPage: selectFilter });\r\n  }\r\n  const getAllShift = async () => {\r\n    try {\r\n      const data = await indexShift().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setShift({ ...data }));\r\n        setRows(data.data);\r\n        handlePagination(1, data.data);\r\n        doGetPageNumber(data.data);\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  const onHandleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = dataRow.data.filter((item) => item.mulai.match(regex) || item.selesai.match(regex));\r\n      setRows(searchResult);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    } else {\r\n      setRows(dataRow.data);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllShift();\r\n    }\r\n  };\r\n\r\n  const addData = () => {\r\n    setDetail(null);\r\n    setTitle('create');\r\n    openModal('add shift');\r\n  }\r\n\r\n  const updateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('update');\r\n    openModal('update shift');\r\n  }\r\n\r\n  const deleteData = (item) => {\r\n    setDetail(item);\r\n    openModal('delete shift');\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(updateBreadcrumb([{ path: '/shift', title: 'Pengaturan Shift' }]));\r\n    getAllShift();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button type=\"button\" onClick={() => addData()} >Tambah</Button>\r\n\r\n      </div>\r\n\r\n      {!isLoading && (\r\n        <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data shift...'} />\r\n\r\n        </div>\r\n      )}\r\n\r\n      <Modal>\r\n        {stateModal?.shift?.showAddModalShift && <FormShift stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.shift?.showUpdateModalShift && <FormShift stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.shift?.showDeleteModalShift && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"Shift\" />}\r\n      </Modal>\r\n\r\n      {isLoading && (\r\n        <SkeletonTable countRows={8} countColumns={10} totalFilter={1} />\r\n      )}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <div className=\"overflow-x-auto mt-8\">\r\n          <table className=\"table table-zebra w-full\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((item, index) => (\r\n                  <th key={index} className=\"text-center\">{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, index) => (\r\n                <tr className=\"text-center\" key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.shift}</td>\r\n                  <td>{item.mulai}</td>\r\n                  <td>{item.selesai}</td>\r\n                  <td>\r\n                    <div className=\"flex flex-row gap-3 justify-center\">\r\n                      <DoUpdate onClick={() => updateData(item)} />\r\n                      <DoDelete onClick={() => deleteData(item)} />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {!isLoading && <Pagination serverMode={false} currentFilterPage={pagination.currentFilterPage} perPage={pagination.filterPage} currentPage={pagination.currentPage} countPage={pagination.pageNumbers} onClick={(i) => handlePagination(i.target.id, undefined)} handlePerPage={(x) => handleFilterPagination(x.target.value)} />}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Shift;\r\n"],"names":["stateModal","getInfo","detail","titleAction","useCreateShiftMutation","createShift","useUpdateShiftMutation","updateShift","user","useSelector","selectCurrentUser","data","initialValues","shift","mulai","selesai","dispatch","useDispatch","onBtnClose","newState","showAddModalShift","showUpdateModalShift","setModal","onSubmitData","payload","resetForm","body","user_id","id_user","doCreate","doUpdate","error","catchError","id","id_shift","unwrap","update","status","handleResponse","setTimeout","add","onHandleReset","reset","className","onClick","enableReinitialize","validationSchema","FormShiftSchema","onSubmit","values","errors","touched","isValid","handleBlur","handleChange","htmlFor","name","placeholder","value","disabled","onBlur","onChange","type","columns","useState","rows","setRows","useIndexShiftMutation","indexShift","isLoading","setDetail","search","setSearch","title","setTitle","dataRow","selectAllShift","selectModalState","openModal","modal","showDeleteModalShift","window","scrollTo","currentPage","currentFilterPage","pageNumbers","filterPage","pagination","setPagination","handlePagination","targetPage","currentPosts","indexOfLastPost","indexOfFirstPost","undefined","slice","doGetPageNumber","dataFix","i","Math","ceil","length","push","getAllShift","setShift","$event","useEffect","updateBreadcrumb","path","onHandleSearch","event","target","regex","RegExp","searchResult","filter","item","match","countRows","countColumns","totalFilter","map","index","updateData","deleteData","serverMode","perPage","countPage","handlePerPage","x","selectFilter","handleFilterPagination"],"sourceRoot":""}