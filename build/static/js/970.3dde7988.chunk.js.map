{"version":3,"file":"static/js/970.3dde7988.chunk.js","mappings":"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","sources":["pages/settings/base_transceiver_station/FormBTS.jsx","pages/settings/base_transceiver_station/BaseTransceiverStation.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport {\r\n  useAddBtsMutation,\r\n  useUpdateBtsMutation,\r\n} from '../../../store/features/bts/btsApiSlice';\r\nimport { selectAllPOP } from '../../../store/features/pop/popSlice';\r\nimport { FormBTSSchema } from '../../../utils/schema_validation_form';\r\nimport { setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, ButtonIconExit, Required } from '../../../components';\r\n\r\nfunction FormBTS({ stateModal, getInfo, detail, titleAction }) {\r\n  const [addData] = useAddBtsMutation();\r\n  const [updateBts] = useUpdateBtsMutation();\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const initialValues = {\r\n    nama_bts: detail?.nama_bts || '',\r\n    deskripsi: detail?.deskripsi || '',\r\n    nama_pic: detail?.nama_pic || '',\r\n    nomor_pic: detail?.nomor_pic || '',\r\n    lokasi: detail?.lokasi || '',\r\n    pop_id: detail?.pop_id || '',\r\n    kordinat: detail?.kordinat || '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onBtnClose = (title) => {\r\n    const newState = {\r\n      ...stateModal,\r\n      bts: { ...stateModal.bts, showAddModalBts: false, showUpdateModalBts: false, showDetailModalBts: false },\r\n    };\r\n    dispatch(setModal(newState));\r\n  };\r\n\r\n  const dataPOP = useSelector(selectAllPOP);\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    const body = {\r\n      nama_bts: payload.nama_bts,\r\n      deskripsi: payload.deskripsi,\r\n      nama_pic: payload.nama_pic,\r\n      nomor_pic: payload.nomor_pic,\r\n      lokasi: payload.lokasi,\r\n      pop_id: payload.pop_id || 1,\r\n      kordinat: payload.kordinat,\r\n      user_id: user.id_user,\r\n    };\r\n    try {\r\n      // create\r\n      if (detail === null) {\r\n        doCreate(body, resetForm);\r\n      } else {\r\n        // update\r\n        doUpdate(body);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const doUpdate = async (body) => {\r\n    const update = await updateBts({\r\n      id: detail.id_bts,\r\n      body: { ...body },\r\n    });\r\n    if (update.data.status === 'success' || update.data.status === 'Success') {\r\n      handleResponse(update);\r\n      setTimeout(() => {\r\n        getInfo({ status: 'success' });\r\n        onBtnClose();\r\n      }, 2000);\r\n    } else {\r\n      catchError(update, true);\r\n    }\r\n  }\r\n\r\n  const doCreate = async (body, resetForm) => {\r\n    const add = await addData({ ...body });\r\n    if (add.data.status === 'success' || add.data.status === 'Success') {\r\n      handleResponse(add);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        onBtnClose();\r\n        getInfo({ status: 'success' });\r\n      }, 2000);\r\n    } else {\r\n      catchError(add, true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed w-screen h-screen bg-opacity-80 bg-gray-700 top-0 left-0 bottom-0 right-0 z-50 flex justify-center\">\r\n      <div className=\"modal-box lg:h-fit h-auto max-h-fit max-w-xl\">\r\n        <ButtonIconExit onClick={onBtnClose} />\r\n\r\n        <h3 className=\"text-lg font-bold\">\r\n          {detail === null && titleAction === 'create' ? 'Tambah Base Transceiver Station' : titleAction === 'update' && 'Ubah Base Transceiver Station'}\r\n          {titleAction === 'read' && 'Detail Base Transceiver Station'}\r\n        </h3>\r\n        <hr className=\"my-2\" />\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={FormBTSSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            onSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            isSubmitting,\r\n            isValid,\r\n            setFieldValue,\r\n            handleBlur,\r\n            handleChange,\r\n            resetForm,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"nama_bts\" className=\"label\">\r\n                  <span className=\"label-text\"> Nama BTS:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"nama_bts\"\r\n                  name=\"nama_bts\"\r\n                  placeholder=\"Nama BTS\"\r\n                  value={values.nama_bts}\r\n                  disabled={titleAction === 'read'}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.nama_bts && touched.nama_bts && <Required errors={errors.nama_bts} />}\r\n              </div>\r\n\r\n              <div className=\"flex flex-col md:flex-row gap-3\">\r\n                <div className=\"form-control flex-1\">\r\n                  <label htmlFor=\"nama_pic\" className=\"label\">\r\n                    <span className=\"label-text\"> Nama PIC</span>\r\n                  </label>\r\n                  <Field\r\n                    id=\"nama_pic\"\r\n                    name=\"nama_pic\"\r\n                    value={values.nama_pic}\r\n                    disabled={titleAction === 'read'}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Nama PIC\"\r\n                    className=\"input input-md input-bordered max-w-full\"\r\n                  />\r\n                  {errors.nama_pic && touched.nama_pic && <Required errors={errors.nama_pic} />}\r\n                </div>\r\n\r\n                <div className=\"form-control flex-1\">\r\n                  <label htmlFor=\"nomor_pic\" className=\"label\">\r\n                    <span className=\"label-text\"> Kontak PIC</span>\r\n                  </label>\r\n\r\n                  <Field\r\n                    id=\"nomor_pic\"\r\n                    name=\"nomor_pic\"\r\n                    value={values.nomor_pic}\r\n                    disabled={titleAction === 'read'}\r\n                    placeholder=\"Kontak PIC\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    className=\"input input-md input-bordered max-w-full\"\r\n                  />\r\n                  {errors.nomor_pic && touched.nomor_pic && <Required errors={errors.nomor_pic} />}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col md:flex-row gap-3\">\r\n                <div className=\"form-control flex-1\">\r\n                  <label htmlFor=\"lokasi\" className=\"label\">\r\n                    <span className=\"label-text\"> Alamat Lengkap</span>\r\n                  </label>\r\n                  <Field\r\n                    id=\"lokasi\"\r\n                    name=\"lokasi\"\r\n                    value={values.lokasi}\r\n                    disabled={titleAction === 'read'}\r\n                    placeholder=\"Alamat Lengkap\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    className=\"input input-md input-bordered max-w-full\"\r\n                  />\r\n                  {errors.lokasi && touched.lokasi && <Required errors={errors.lokasi} />}\r\n                </div>\r\n                <div className=\"form-control flex-1\">\r\n                  <label htmlFor=\"location\" className=\"label\">\r\n                    <span className=\"label-text\"> POP (Area Operasional)</span>\r\n                  </label>\r\n                  <Field\r\n                    component=\"select\"\r\n                    id=\"pop_id\"\r\n                    name=\"pop_id\"\r\n                    value={values.pop_id}\r\n                    disabled={titleAction === 'read'}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    className=\"select w-full max-w-full input-bordered\"\r\n\r\n                  >\r\n                    <option value=\"\" label=\"Pilih POP\" defaultValue={\"\"}>Pilih POP</option>\r\n                    {dataPOP.data.map((item, index) => (\r\n                      <option key={index} id={item.id_pop} value={item.id_pop} label={item.pop}>\r\n                        {item.pop}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {errors.pop_id && touched.pop_id && <Required errors={errors.pop_id} />}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"kordinat\" className=\"label\">\r\n                  <span className=\"label-text\"> Koordinat:</span>\r\n                </label>\r\n\r\n                <Field\r\n                  id=\"kordinat\"\r\n                  name=\"kordinat\"\r\n                  placeholder=\"Koordinat\"\r\n                  value={values.kordinat}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  disabled={titleAction === 'read'}\r\n                  className=\"input input-md input-bordered max-w-full\"\r\n                />\r\n                {errors.kordinat && touched.kordinat && <Required errors={errors.kordinat} />}\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"deskripsi\" className=\"label\">\r\n                  <span className=\"label-text\"> Deskripsi Base Transceiver Station:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"deskripsi\"\r\n                  component=\"textarea\"\r\n                  name=\"deskripsi\"\r\n                  placeholder=\"Deskripsi Base Transceiver Station\"\r\n                  value={values.deskripsi}\r\n                  disabled={titleAction === 'read'}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full h-28\"\r\n                />\r\n                {errors.deskripsi && touched.deskripsi && <Required errors={errors.deskripsi} />}\r\n              </div>\r\n              <hr className=\"my-2 mt-10\" />\r\n              {titleAction !== 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onBtnClose()} >Batal</Button>\r\n                  <Button type=\"submit\" className=\"btn-success\" disabled={!isValid} >Simpan</Button>\r\n                </div>\r\n              )}\r\n              {titleAction === 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onBtnClose()} >Kembali</Button>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormBTS;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { selectAllBTS, setBTS } from '../../../store/features/bts/btsSlice';\r\nimport { useAllBtsMutation } from '../../../store/features/bts/btsApiSlice';\r\nimport FormBTS from './FormBTS';\r\nimport { useAllPOPMutation } from '../../../store/features/pop/popApiSlice';\r\nimport { setPOP } from '../../../store/features/pop/popSlice';\r\nimport { updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\n\r\nimport { selectModalState, setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { DoDelete, SelectPOP, DoDetail, DoUpdate, SkeletonTable, Modal, DeleteModal, Pagination, LabelStatusPOP, Search, Button } from '../../../components';\r\n\r\nconst columns = [\r\n  'No',\r\n  'POP',\r\n  'Nama',\r\n  'Penanggung Jawab',\r\n  'No Penanggung Jawab',\r\n  'Lokasi',\r\n  'Koordinat',\r\n  'Aksi',\r\n];\r\n\r\nfunction BaseTransceiverStation() {\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [dataPOP, setdataPOP] = useState([]);\r\n  const [pop, setPOPLocal] = useState('all');\r\n  const [allBts, { isLoading }] = useAllBtsMutation();\r\n  const dispatch = useDispatch();\r\n  const [detail, setDetail] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n\r\n  const [title, setTitle] = useState('update');\r\n\r\n  const dataRow = useSelector(selectAllBTS);\r\n  const stateModal = useSelector(selectModalState);\r\n  const openModal = (modal) => {\r\n    let newState;\r\n    if (modal === 'add bts') {\r\n      newState = { ...stateModal, bts: { ...stateModal.bts, showAddModalBts: true } };\r\n    } else if (modal === 'update bts') {\r\n      newState = { ...stateModal, bts: { ...stateModal.bts, showUpdateModalBts: true } };\r\n    } else if (modal === 'delete bts') {\r\n      newState = { ...stateModal, bts: { ...stateModal.bts, showDeleteModalBts: true } };\r\n    } else if (modal === 'detail bts') {\r\n      newState = { ...stateModal, bts: { ...stateModal.bts, showDetailModalBts: true } };\r\n    }\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState([5]);\r\n  const [countPage, setCountPage] = useState([1]);\r\n\r\n  const onHandleSearch = (event) => {\r\n    event.preventDefault();\r\n    setSearch(event.target.value);\r\n\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = dataRow.data.filter((item) => {\r\n        if (+item.pop.id_pop === +pop) {\r\n          if (item.nama_bts.match(regex) || item.nama_pic.match(regex)) {\r\n            return item;\r\n          }\r\n        }\r\n        if (pop === 'all') {\r\n          if (item.nama_bts.match(regex) || item.nama_pic.match(regex)) {\r\n            return item;\r\n          }\r\n        }\r\n      });\r\n      setRows(searchResult);\r\n    } else {\r\n      setRows(dataRow.data.filter((item) => {\r\n        if (+item.pop.id_pop === +pop) {\r\n          return item;\r\n        }\r\n        if (pop === 'all') {\r\n          return item;\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handlePOP = (event) => {\r\n    setPOPLocal(event.target.value);\r\n    const dataChanged = dataRow.data.filter((item) => {\r\n      if (+item.pop_id === +event.target.value) {\r\n        return item;\r\n      }\r\n    })\r\n    if (event.target.value === 'all') {\r\n      setRows(dataRow.data)\r\n    } else {\r\n      setRows(dataChanged);\r\n    }\r\n  };\r\n\r\n  const [allPOP] = useAllPOPMutation();\r\n\r\n  const getAllPOP = async () => {\r\n    try {\r\n      const data = await allPOP().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setPOP({ ...data }));\r\n        setdataPOP(data.data)\r\n      } else {\r\n        catchError(data, true);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const getAllBTS = async (page = 1) => {\r\n    const param = `?page=${page}`;\r\n    try {\r\n      const data = await allBts(param).unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        const result = data.data.data;\r\n        dispatch(setBTS({ data: result }));\r\n        setRows(result);\r\n        setCurrentPage(data.data.current_page);\r\n        setPerPage([data.data.per_page]);\r\n\r\n        const countPaginate = [];\r\n        for (let i = 0; i < data.data.last_page; i++) {\r\n          countPaginate.push(i + 1);\r\n        }\r\n        setCountPage(countPaginate);\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(updateBreadcrumb([{ path: '/base_transceiver_station', title: 'Base Transceiver Station' }]))\r\n    getAllPOP()\r\n    getAllBTS();\r\n  }, []);\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllBTS();\r\n    }\r\n  };\r\n\r\n\r\n  const addData = () => {\r\n    setDetail(null);\r\n    setTitle('create');\r\n    openModal('add bts');\r\n  }\r\n\r\n  const updateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('update');\r\n    openModal('update bts');\r\n  }\r\n\r\n  const deleteData = (item) => {\r\n    setDetail(item);\r\n    openModal('delete bts');\r\n  }\r\n\r\n  const detailData = (item) => {\r\n    setDetail(item);\r\n    setTitle('read');\r\n    openModal('detail bts');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user?.role_id === 0 && (\r\n        <div>\r\n          <Button type=\"button\" onClick={() => addData()} >Tambah</Button>\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && (\r\n        <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <div className=\"form-control w-full md:w-52\">\r\n            <SelectPOP dataPOP={dataPOP} handlePOP={handlePOP} />\r\n          </div>\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data BTS...'} />\r\n\r\n        </div>\r\n      )}\r\n\r\n      <Modal>\r\n        {stateModal?.bts?.showAddModalBts && <FormBTS stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.bts?.showUpdateModalBts && <FormBTS stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.bts?.showDeleteModalBts && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"BTS\" />}\r\n        {stateModal?.bts?.showDetailModalBts && <FormBTS stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n      </Modal>\r\n\r\n      {isLoading && <SkeletonTable countRows={8} countColumns={10} totalFilter={2} />}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <div className=\"overflow-x-auto mt-8\">\r\n          <table className=\"table table-zebra w-full\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((item, index) => (\r\n                  <th key={index} className=\"text-center\">{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, index) => (\r\n                <tr className=\"text-center\" id={item.id} key={index}>\r\n                  <td id={item.id}>{index + 1}</td>\r\n                  <td>\r\n                    <LabelStatusPOP status={item?.pop?.pop} />\r\n                  </td>\r\n                  <td>{item.nama_bts}</td>\r\n                  <td>{item.nama_pic}</td>\r\n                  <td>{item.nomor_pic}</td>\r\n                  <td>{item.lokasi}</td>\r\n                  <td>{item.kordinat}</td>\r\n                  <td>\r\n                    {user?.role_id === 0 ? (\r\n                      <div className=\"flex flex-row gap-3 justify-center\">\r\n                        <DoUpdate onClick={() => updateData(item)} />\r\n                        <DoDelete onClick={() => deleteData(item)} />\r\n                        <DoDetail onClick={() => detailData(item)} />\r\n                      </div>\r\n                    ) : <DoDetail onClick={() => detailData(item)} />\r\n                    }\r\n                  </td>\r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {!isLoading && (<Pagination perPage={perPage} currentPage={currentPage} countPage={countPage} onClick={(i) => getAllBTS(i.target.id)} serverMode />)}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\nexport default BaseTransceiverStation;\r\n"],"names":["stateModal","getInfo","detail","titleAction","useAddBtsMutation","addData","useUpdateBtsMutation","updateBts","user","useSelector","selectCurrentUser","data","initialValues","nama_bts","deskripsi","nama_pic","nomor_pic","lokasi","pop_id","kordinat","dispatch","useDispatch","onBtnClose","title","newState","bts","showAddModalBts","showUpdateModalBts","showDetailModalBts","setModal","dataPOP","selectAllPOP","onSubmitData","payload","resetForm","body","user_id","id_user","doCreate","doUpdate","error","catchError","id","id_bts","update","status","handleResponse","setTimeout","add","className","onClick","enableReinitialize","validationSchema","FormBTSSchema","onSubmit","values","errors","touched","isValid","isSubmitting","handleBlur","setFieldValue","handleChange","htmlFor","name","placeholder","value","disabled","onBlur","onChange","component","label","defaultValue","map","item","index","id_pop","pop","type","columns","useState","rows","setRows","setdataPOP","setPOPLocal","useAllBtsMutation","allBts","isLoading","setDetail","search","setSearch","setTitle","dataRow","selectAllBTS","selectModalState","openModal","modal","showDeleteModalBts","window","scrollTo","currentPage","setCurrentPage","perPage","setPerPage","countPage","setCountPage","useAllPOPMutation","allPOP","getAllPOP","unwrap","setPOP","getAllBTS","page","param","result","setBTS","current_page","per_page","countPaginate","i","last_page","push","useEffect","updateBreadcrumb","path","$event","detailData","role_id","handlePOP","event","target","dataChanged","filter","onHandleSearch","preventDefault","length","regex","RegExp","searchResult","match","countRows","countColumns","totalFilter","updateData","deleteData","serverMode"],"sourceRoot":""}