{"version":3,"file":"static/js/197.558343f7.chunk.js","mappings":"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","sources":["pages/settings/role/FormRole.jsx","pages/settings/role/Role.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../../store/features/auth/authSlice';\r\nimport { useAddTeamMutation, useUpdateTeamMutation } from '../../../store/features/team/teamApiSlice';\r\nimport { FormRoleSchema } from '../../../utils/schema_validation_form';\r\nimport { setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport handleResponse from '../../../services/handleResponse';\r\nimport { Button, ButtonIconExit, Required } from '../../../components';\r\n\r\nfunction FormRole({ stateModal, getInfo, detail, titleAction }) {\r\n  const [addTeam] = useAddTeamMutation();\r\n  const [updateTeam] = useUpdateTeamMutation();\r\n  const { data: user } = useSelector(selectCurrentUser);\r\n  const initialValues = {\r\n    role: detail?.role || '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onBtnClose = () => {\r\n    const newState = {\r\n      ...stateModal,\r\n      role: { ...stateModal.role, showAddModalRole: false, showUpdateModalRole: false },\r\n    };\r\n    dispatch(setModal(newState));\r\n  };\r\n\r\n  const onSubmitData = async (payload, resetForm) => {\r\n    const body = {\r\n      id_role: Math.floor(Math.random() * 90 + 10),\r\n      role: payload.role,\r\n      user_id: user.id_user,\r\n    };\r\n    try {\r\n      // create\r\n      if (detail === null) {\r\n        doCreate(body, resetForm);\r\n      } else {\r\n        // update\r\n        doUpdate(body);\r\n      }\r\n    } catch (error) {\r\n      catchError(error, true);\r\n    }\r\n  };\r\n\r\n  const doUpdate = async (body) => {\r\n    const update = await updateTeam({\r\n      id: detail.id_role,\r\n      body: { ...body, id_role: detail.id_role },\r\n    });\r\n    if (update.data.status === 'success' || update.data.status === 'Success') {\r\n      handleResponse(update);\r\n      setTimeout(() => {\r\n        getInfo({ status: 'success' });\r\n        onBtnClose();\r\n      }, 2000);\r\n    } else {\r\n      catchError(update, true);\r\n    }\r\n  }\r\n\r\n  const doCreate = async (body, resetForm) => {\r\n    const add = await addTeam({ ...body });\r\n    if (add.data.status === 'success' || add.data.status === 'Success') {\r\n      handleResponse(add);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        onBtnClose();\r\n        getInfo({ status: 'success' });\r\n      }, 2000);\r\n    } else {\r\n      catchError(add, true);\r\n    }\r\n  }\r\n\r\n  const onHandleReset = (reset) => {\r\n    reset();\r\n    onBtnClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed w-screen h-screen bg-opacity-80 bg-gray-700 top-0 left-0 bottom-0 right-0 z-50 flex justify-center\">\r\n      <div className=\"modal-box mt-5  h-fit max-h-fit  max-w-lg\">\r\n        <ButtonIconExit onClick={onBtnClose} />\r\n\r\n        <h3 className=\"text-lg font-bold\">\r\n          {detail === null && titleAction === 'create' ? 'Tambah Role' : titleAction === 'update' && 'Ubah Role'}\r\n          {titleAction === 'read' && 'Detail Role'}\r\n        </h3>\r\n        <hr className=\"my-2\" />\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={FormRoleSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            onSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            isValid,\r\n            handleBlur,\r\n            handleChange,\r\n            resetForm,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"role\" className=\"label\">\r\n                  <span className=\"label-text\"> Nama role:</span>\r\n                </label>\r\n                <Field\r\n                  id=\"role\"\r\n                  name=\"role\"\r\n                  placeholder=\"Nama Role\"\r\n                  value={values.role}\r\n                  disabled={titleAction === 'read'}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  className=\"input input-md input-bordered  max-w-full\"\r\n                />\r\n                {errors.role && touched.role && <Required errors={errors.role} />}\r\n              </div>\r\n\r\n              <hr className=\"my-2 mt-10\" />\r\n              {titleAction !== 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Batal</Button>\r\n                  <Button type=\"submit\" className=\"btn-success\" disabled={!isValid} >Simpan</Button>\r\n                </div>\r\n              )}\r\n              {titleAction === 'read' && (\r\n                <div className=\"modal-action justify-center\">\r\n                  <Button type=\"button\" onClick={() => onHandleReset(resetForm)} >Kembali</Button>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormRole;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateBreadcrumb } from '../../../store/features/breadcrumb/breadcrumbSlice';\r\nimport { useAllTeamMutation } from '../../../store/features/team/teamApiSlice';\r\nimport { selectAllTeam, setTeam } from '../../../store/features/team/teamSlice';\r\nimport FormRole from './FormRole';\r\nimport { selectModalState, setModal } from '../../../store/features/modal/modalSlice';\r\nimport catchError from '../../../services/catchError';\r\nimport { Button, DoDelete, DoUpdate, Search, DeleteModal, SkeletonTable, Pagination, Modal } from '../../../components';\r\n\r\nconst columns = ['No', 'Nama', 'Aksi'];\r\n\r\nfunction Role() {\r\n  const dispatch = useDispatch();\r\n  const [rows, setRows] = useState([]);\r\n  const [allTeam, { isLoading }] = useAllTeamMutation();\r\n  const [detail, setDetail] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [title, setTitle] = useState('update');\r\n  const dataRow = useSelector(selectAllTeam);\r\n  const stateModal = useSelector(selectModalState);\r\n  const openModal = (modal) => {\r\n    let newState;\r\n    if (modal === 'add role') {\r\n      newState = { ...stateModal, role: { ...stateModal.role, showAddModalRole: true } };\r\n    } else if (modal === 'update role') {\r\n      newState = { ...stateModal, role: { ...stateModal.role, showUpdateModalRole: true } };\r\n    } else if (modal === 'delete role') {\r\n      newState = { ...stateModal, role: { ...stateModal.role, showDeleteModalRole: true } };\r\n    }\r\n    dispatch(setModal(newState));\r\n    window.scrollTo(0, 0);\r\n  }\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    currentFilterPage: 10,\r\n    pageNumbers: [1],\r\n    filterPage: [5, 10, 25, 50, 100]\r\n  });\r\n\r\n  const handlePagination = (targetPage = 1, data) => {\r\n    setPagination({ ...pagination, currentPage: targetPage, currentFilterPage: pagination.currentFilterPage })\r\n    const indexOfLastPost = targetPage * pagination.currentFilterPage;\r\n    const indexOfFirstPost = indexOfLastPost - pagination.currentFilterPage;\r\n    let currentPosts;\r\n    if (data === undefined) {\r\n      currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    } else {\r\n      currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n    setRows(currentPosts);\r\n  }\r\n\r\n  const doGetPageNumber = (dataFix) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataFix.length / pagination.currentFilterPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers });\r\n  }\r\n\r\n  const handleFilterPagination = (selectFilter) => {\r\n    const indexOfLastPost = pagination.currentPage * selectFilter;\r\n    const indexOfFirstPost = indexOfLastPost - selectFilter;\r\n    const currentPosts = dataRow?.data.slice(indexOfFirstPost, indexOfLastPost);\r\n    setRows(currentPosts);\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(dataRow.data.length / selectFilter); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    setPagination({ ...pagination, pageNumbers, currentFilterPage: selectFilter });\r\n  }\r\n\r\n  const getAllTeam = async () => {\r\n    try {\r\n      const data = await allTeam().unwrap();\r\n      if (data.status === 'success' || data.status === 'Success') {\r\n        dispatch(setTeam({ ...data }));\r\n        setRows(data.data);\r\n        handlePagination(1, data.data);\r\n        doGetPageNumber(data.data);\r\n      } else {\r\n        setRows([]);\r\n        catchError(data, true);\r\n      }\r\n    } catch (err) {\r\n      setRows([]);\r\n      catchError(err, true);\r\n    }\r\n  };\r\n\r\n  const onHandleSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      const regex = new RegExp(search, 'ig');\r\n      const searchResult = dataRow.data.filter((item) => item.role.match(regex));\r\n      setRows(searchResult);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    } else {\r\n      setRows(dataRow.data);\r\n      setPagination({\r\n        currentPage: 1,\r\n        currentFilterPage: 100,\r\n        pageNumbers: [1],\r\n        filterPage: [5, 10, 25, 50, 100]\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInfo = ($event) => {\r\n    if ($event.status === 'success') {\r\n      getAllTeam();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(updateBreadcrumb([{ path: '/role', title: 'Pengaturan Role' }]));\r\n    getAllTeam();\r\n  }, []);\r\n\r\n  const addData = () => {\r\n    setDetail(null);\r\n    setTitle('create');\r\n    openModal('add role');\r\n  }\r\n\r\n  const updateData = (item) => {\r\n    setDetail(item);\r\n    setTitle('update');\r\n    openModal('update role');\r\n  }\r\n\r\n  const deleteData = (item) => {\r\n    setDetail(item);\r\n    openModal('delete role');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button type=\"button\" onClick={() => addData()} >Tambah</Button>\r\n      </div>\r\n\r\n      {!isLoading && (\r\n        <div className=\"gap-5 mt-5 flex flex-col md:flex md:flex-row\">\r\n          <Search search={search} onHandleSearch={onHandleSearch} placeholder={'Cari data otoritas...'} />\r\n        </div>\r\n      )}\r\n\r\n      <Modal>\r\n        {stateModal?.role?.showAddModalRole && <FormRole stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.role?.showUpdateModalRole && <FormRole stateModal={stateModal} getInfo={getInfo} detail={detail} titleAction={title} />}\r\n        {stateModal?.role?.showDeleteModalRole && <DeleteModal stateModal={stateModal} getInfo={getInfo} detail={detail} title=\"Team\" />}\r\n      </Modal>\r\n\r\n      {isLoading && (\r\n        <SkeletonTable countRows={8} countColumns={10} totalFilter={1} />\r\n      )}\r\n\r\n      {/* start table */}\r\n      {!isLoading && (\r\n        <div className=\"overflow-x-auto mt-8\">\r\n          <table className=\"table table-zebra w-full\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((item, index) => (\r\n                  <th key={index} className=\"text-center\">{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.map((item, index) => (\r\n                <tr className=\"text-center\" key={index}>\r\n                  <td id={item.id}>{index + 1}</td>\r\n                  <td className=\"capitalize\">{item.role}</td>\r\n                  <td>\r\n                    <div className=\"flex flex-row gap-3 justify-center\">\r\n                      <DoUpdate onClick={() => updateData(item)} />\r\n                      <DoDelete onClick={() => deleteData(item)} />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {!isLoading && <Pagination serverMode={false} currentFilterPage={pagination.currentFilterPage} perPage={pagination.filterPage} currentPage={pagination.currentPage} countPage={pagination.pageNumbers} onClick={(i) => handlePagination(i.target.id, undefined)} handlePerPage={(x) => handleFilterPagination(x.target.value)} />}\r\n      {/* end table */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Role;\r\n"],"names":["stateModal","getInfo","detail","titleAction","useAddTeamMutation","addTeam","useUpdateTeamMutation","updateTeam","user","useSelector","selectCurrentUser","data","initialValues","role","dispatch","useDispatch","onBtnClose","newState","showAddModalRole","showUpdateModalRole","setModal","onSubmitData","payload","resetForm","body","id_role","Math","floor","random","user_id","id_user","doCreate","doUpdate","error","catchError","id","update","status","handleResponse","setTimeout","add","onHandleReset","reset","className","onClick","enableReinitialize","validationSchema","FormRoleSchema","onSubmit","values","errors","touched","isValid","handleBlur","handleChange","htmlFor","name","placeholder","value","disabled","onBlur","onChange","type","columns","useState","rows","setRows","useAllTeamMutation","allTeam","isLoading","setDetail","search","setSearch","title","setTitle","dataRow","selectAllTeam","selectModalState","openModal","modal","showDeleteModalRole","window","scrollTo","currentPage","currentFilterPage","pageNumbers","filterPage","pagination","setPagination","handlePagination","targetPage","currentPosts","indexOfLastPost","indexOfFirstPost","undefined","slice","doGetPageNumber","dataFix","i","ceil","length","push","getAllTeam","unwrap","setTeam","$event","useEffect","updateBreadcrumb","path","onHandleSearch","event","target","regex","RegExp","searchResult","filter","item","match","countRows","countColumns","totalFilter","map","index","updateData","deleteData","serverMode","perPage","countPage","handlePerPage","x","selectFilter","handleFilterPagination"],"sourceRoot":""}